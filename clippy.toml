await-holding-invalid-types = [
  "generational_box::GenerationalRef",
  { path = "generational_box::GenerationalRef", reason = "Reads should not be held over an await point. This will cause any writes to fail while the await is pending since the read borrow is still active." },
  "generational_box::GenerationalRefMut",
  { path = "generational_box::GenerationalRefMut", reason = "Write should not be held over an await point. This will cause any reads or writes to fail while the await is pending since the write borrow is still active." },
  "dioxus_signals::Write",
  { path = "dioxus_signals::Write", reason = "Write should not be held over an await point. This will cause any reads or writes to fail while the await is pending since the write borrow is still active." },
]

# Suppress redundant closure warnings for Dioxus signals which require closures, not function pointers
# These are false positives as use_signal specifically requires closures, not function pointers
avoid-breaking-exported-api = false
